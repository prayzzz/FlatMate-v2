@model FlatMate.Web.Areas.Lists.Data.ItemListViewVm

@{
    Layout = "_Layout";
    ViewData["Title"] = "Liste: " + Model.List.Name;
    ViewData["PageTitle"] = Model.List.Name;
}

<section class="container">

    <div class="flex-row">
        <div class="flex-row actions" style="width: 50%">
            <a asp-area="Lists" asp-controller="ItemList" asp-action="My">Meine Listen</a>
        </div>

        <div class="flex-row align-right actions" style="width: 50%">
            <a asp-action="Update" asp-route-id="@Model.List.Id">Liste bearbeiten</a>
        </div>
    </div>

    @*<item-list-editor params="model: model" style="width: 100%"></item-list-editor>*@
    <item-list-editor style="width: 100%"></item-list-editor>

</section>

<script type="text/x-template" id="item-list-editor-template">

    <div class="standard-box table">

        <div class="body">

            <!-- ko foreach: groups -->
            <div class="row" style="background-color: #f6f6f9">
                <div class="cell" data-bind="click: enterEditMode">
                    <strong>
                        <span data-bind="text: name, visible: !isInEditMode()"></span>
                    </strong>
                    <input type="text" data-bind="value: name, visible: isInEditMode, hasFocus: isInEditMode, event: { blur: leaveEditMode }, enterkey: leaveEditMode" />
                </div>
                <div class="cell">
                    @*<div v-if="showOwner()">
                            von {{group.user.userName}}
                        </div>*@
                </div>
                <div class="cell icon">
                    <a class="icon-24 icon-cross-circle" data-bind="click: $parent.removeGroup"></a>
                </div>
            </div>

            <!-- ko foreach: items -->
            <div class="row draggable" data-bind="css: { dragging: isDragging }, dragZone: $parent.dragZone, dragEvents: $parent.dragEvents($data)">
                <div class="cell">
                    <div style="display:flex; align-items:center">
                        <div class="icon-16 icon-grip" style="margin-right: 1.5rem;"></div>
                        <div style="flex:1;" data-bind="click: enterEditMode">
                            <span data-bind="text: name, visible: !isInEditMode()"></span>
                            <input type="text" data-bind="value: name, visible: isInEditMode, hasFocus: isInEditMode, event: { blur: leaveEditMode }, enterkey: leaveEditMode" />
                        </div>
                        @*<div v-if="showOwner()">
                                von {{item.user.userName}}
                            </div>*@
                    </div>
                </div>
                <div class="cell icon"></div>
                <div class="cell icon">
                    <a class="icon-24 icon-cross-circle" data-bind="click: $parent.removeItem"></a>
                </div>
            </div>
            <!-- /ko -->

            <div class="row">
                <div class="cell" style="padding-left:calc(1rem + 16px)">
                    <input type="text" placeholder="Neuen Eintrag hinzufügen" data-bind="textInput: newItemName, hasFocus: isNewItemFocused, enterkey: addItem" />
                </div>
                <div class="cell icon">
                    <a class="icon-24 icon-plus-circle" data-bind="click: addItem"></a>
                </div>
                <div class="cell icon"></div>
            </div>

            <!-- /ko -->
        </div>
    </div>

    <div class="standard-box table">

        <div class="row">
            <div class="cell">
                <input type="text" placeholder="Neue Gruppe hinzufügen" data-bind="textInput: $component.newGroupName, enterkey: addGroup" />
            </div>
            <div class="cell icon">
                <a class="icon-24 icon-plus-circle" data-bind="click: addGroup"></a>
            </div>
            <div class="cell icon"></div>
        </div>

    </div>

</script>

@section viewData {
    @Json.Serialize(Model.List)
}
